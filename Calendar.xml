<script type="text/javascript">
	if (typeof jQuery != 'undefined') $.noConflict(true);
</script>
<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min.js" type="text/javascript"></script>
<link rel="stylesheet" href="//cdn.jsdelivr.net/jquery.mcustomscrollbar/3.0.6/jquery.mCustomScrollbar.min.css" />
<script src="//cdn.jsdelivr.net/jquery.mcustomscrollbar/3.0.6/jquery.mCustomScrollbar.concat.min.js"></script>

<script src="https://ajax.googleapis.com/ajax/libs/jqueryui/1.8.18/jquery-ui.min.js"></script>

<link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/fullcalendar/3.3.1/fullcalendar.min.css" />
<link rel="stylesheet" type="text/css" media="screen" href="http://www.phila.gov/Style%20Library/CSS/fullcalendar.print.css"/>
<link rel="stylesheet" type="text/css" media="screen" href="http://www.phila.gov/Style%20Library/CSS/jquery-ui-1.8.1.custom.css"/>
<link rel="stylesheet" type="text/css" href="http://www.phila.gov/Style%20Library/CSS/E-design.css" />
<!--<link href="http://admin-www.phila.gov/Style%20Library/CSS/C-typography.css" rel="stylesheet" type="text/css">-->

<script src="//cdnjs.cloudflare.com/ajax/libs/moment.js/2.18.1/moment.min.js"></script>
<script src="//cdnjs.cloudflare.com/ajax/libs/fullcalendar/3.3.1/fullcalendar.min.js" type="text/javascript"></script>
<script src="http://www.phila.gov/Style%20Library/Scripts/spin.min.js" type="text/javascript"></script>
<style type="text/css">
	.cf:after,
	.cf:before {
		content: " ";
		display: table
	}

	.cf:after {
		clear: both
	}

	.ph-widget.sessionViewer .address {
		height: 500px;
		max-height: 500px;
		overflow: auto;
		position: relative;
		box-sizing: border-box
	}

	.fc-event {
		background: #cecece!important;
		color: #fff!important
	}

	.fc-day-grid-event {
		cursor: pointer
	}

	.page #calendar table {
		float: none
	}

	.mapurl {
		background-color: #fff
	}

	.mapurl::after {
		clear: both;
		display: block;
		content: ""
	}

	.mapurl a {
		margin: 0;
		background: #fff!important;
		display: inline-block!important;
		padding: 5px!important;
		float: right
	}

	.ph-widget.sessionViewer .calendarColumn .label,
	.ph-widget.sessionViewer .calendarColumnFullRow .decisionHistory.labels,
	.ph-widget.sessionViewer .calendarColumnFullRow .label {
		font-size: .9rem;
		font-weight: 600;
		margin-bottom: 3px;
		color: #444
	}

	.infoPanel {
		line-height: 1rem;
		font-size: .8rem;
		font-weight: 100!important;
		color: #444
	}

	.ph-widget.sessionViewer .calendarColumn,
	.ph-widget.sessionViewer .calendarColumnFullRow {
		margin: .4rem 0
	}

	.infoPanel table {
		width: 100%;
		text-align: center
	}

	.infoPanel table tr td,
	.infoPanel table tr th {
		padding: 5px;
		font-size: .8rem
	}

	.infoPanel table tbody tr:nth-child(odd) {
		background: #efefef
	}

	.courtDetailContainer,
	.decisionDetailContainer,
	.entityDetailContainer {
		display: none
	}

	.entityDetailContainer {
		border-top: 1px dashed #cecece;
		border-bottom: 1px dashed #cecece
	}

	.courtDetailContainer::after,
	.decisionDetailContainer::after,
	.entityDetailContainer::after {
		clear: both;
		content: "";
		display: block
	}
</style>

<div class="ph-widget">
	<div class="loading" id='loading' style='display: none;'></div>
	<div class="calendar" id="calendar"></div>
	<script type="text/javascript">
		var DEBUG = true;
		var currentContext = null;
		var serviceURL = "https://data.phila.gov/carto/api/v2/sql?q=";

		if (!String.prototype.trim) {
			String.prototype.trim = (function () {
				function String_trim() {
					return jQuery.trim(this);
				}
				return String_trim;
			})();
		}

		Date.prototype.addDays = function (days) {
			this.setDate(this.getDate() + days);
		}

		function toISOString(x) {
			function pad(n) {
				return n < 10 ? '0' + n : n
			}
			var d = new Date(x);
			return d.getFullYear() + '-' +
				pad(d.getMonth() + 1) + '-' +
				pad(d.getDate()) + 'T' +
				pad(d.getHours()) + ':' +
				pad(d.getMinutes()) + ':' +
				pad(d.getSeconds()) + 'Z'
		}

		function serviceCall(apiurl, successcallback, callback) {
			$.ajax({
				dataType: "json",
				url: apiurl,
				async: false,
				cache: true,
				timeout: 500000,
				type: "GET",
				xhrFields: {
					withCredentials: false
				},
				error: function (jqXHR, textStatus, errorThrown) {
					$('.loading').hide();
					//$(".decisionDetailContainer").text("No records found.");
					successcallback(null, callback);
				},
				statusCode: {
					404: function () {
						alert('ERROR: Could not connect to service.');
					}
				},
				success: function (data) {
					successcallback(data, callback);
				}
			});

		};

		function serverDate(date) {
			var startTime = new Date(date);
			return new Date(startTime.getTime() + (startTime.getTimezoneOffset() * 60000));
		}

		function getEvents(data, callback) {
			var events = [];

			if (data != null && !data.erros && data.rows) {
				$.each(data.rows, function (key, val) {

					//date as sent from server
					//this is a philadelphia local (EST) date, but it is marked as UTC
					//var databasedate = new serverDate();
					//databasedate = serverDate(val.scheduled_datetime)
					var hearingStartDate = serverDate(val.scheduled_datetime);
					var hearingEndDate = serverDate(val.scheduled_datetime);
					hearingEndDate.addDays(1);

					events.push({
						url: "",
						className: "event_" + val.board_type,
						hearing_id: val.hearing_id,
						board_type: val.board_type,
						appeal_id: val.appeal_id,
						btype: val.board_type,
						hearing_start: hearingStartDate.toString(),
						hearing_end: hearingEndDate.toString(),
						title: val.board_type.toString().replace("RB_", ""),
						start: val.scheduled_datetime,
						descriptionofproject: val.descriptionofproject
					});
				});
				callback(events);
			}
		};

		function getHearings(data, callback) {

			var hearings = [];

			if (data != null && !data.error && data.rows) {
				$.each(data.rows, function (key, val) {
					var title = "";
					var laddr = val.address;

					var apis3 = null;
					var ent = null;
					var entName = null;
					if ("RB_ZBA" == val.applictype) {
						apis3 = "Zoning Board of Appeal";
						entName = "Permit";
						ent = "permits";
					} else if ("RB_LIRB" == val.applictype) {
						apis3 = "L&I Review Board of Appeal";
						entName = "Case";
						ent = "cases";
					} else if ("RB_BBS" == val.applictype) {
						apis3 = "Board of Building Standards";
						entName = "Permit";
						ent = "permits";
					}


					var hearingStartDate = serverDate(val.date_scheduled);

					hearings.push({
						appeal_id: $.trim(val.appeal_key),
						appeal_number: $.trim(val.appealno),
						application_type: $.trim(val.applictype),
						grounds: $.trim(val.appealgrounds),
						primary_applicant: $.trim(val.primaryapplicant),
						capacity: $.trim(val.applicantcapacity),
						scheduled_datetime: hearingStartDate,
						location_id: null,
						owner: $.trim(val.ownername),
						location: laddr,
						ent: ent,
						entName: entName,
						descriptionofproject: val.descriptionofproject
					});
				});
				callback(hearings);
			}
		};

		/**
		 * Return the Time in format "h:i A"" of a datetime.
		 */
		function clockTime(d) {
			var currentTime = new Date(d);
			var hours = currentTime.getHours();
			var minutes = currentTime.getMinutes();
			var result = "";

			if (minutes < 10) {
				minutes = "0" + minutes;
			}

			var ampm = "";

			if (hours == 24) {
				ampm += "AM";
				hours = 0;
			} else if (hours == 12) {
				ampm += "PM";
			} else if (hours > 12) {
				ampm += "PM";
				hours = hours - 12;
			} else {
				ampm += "AM";
			}
			if (hours == '0' || hours == '00') {
				return "Time not provided";
			}
			result += ("" + hours + ":" + minutes + " " + ampm);
			return result;
		}

		function populateHearings(data) {
			var $panel = $(".sessionViewer .address-content");
			$panel.empty();
			$(".sessionViewer>.infoPanel").empty();
			$.each(data, function (key, val) {

				var urlparam = encodeURI(val.location);
				var timestringparam = clockTime(val.scheduled_datetime);

				var lf = $('<div>', {
					'class': 'leftcolumn'
				});
				$('<a>', {
						'class': 'addressLink'
					}).data('appeal_key', val.appeal_id).click(addressDetail)
					.html(val.location + "<br/>" + timestringparam).appendTo(lf);

				var hd = $('<div>', {
					'class': '',
					'style': 'display: none;',
					'id': val.appeal_id
				}); //.appendTo(lf);

				$('<div>', {
						'class': 'infoHeader'
					}).text(val.location)
					.appendTo(hd);
				$('<div>', {
						'class': 'mapurl text'
					}).append($('<a>', {
						'target': '_blank',
						'href': 'http://www.phila.gov/map?address=' + urlparam
					}).text("Map"))
					.appendTo(hd);
				$('<div>', {
						'class': 'calendarColumn'
					})
					.append($('<div>', {
						'class': 'label'
					}).text('Appeal Number:'))
					.append($('<div>', {
						'class': 'text appealnumber'
					}).text(val.appeal_number))
					.appendTo(hd);
				$('<div>', {
						'class': 'calendarColumn'
					})
					.append($('<div>', {
						'class': 'label'
					}).text('Scheduled Time:'))
					.append($('<div>', {
						'class': 'text'
					}).text(timestringparam))
					.appendTo(hd);
				$('<div>', {
						'class': 'calendarColumn'
					})
					.append($('<div>', {
						'class': 'label'
					}).text('Appeal Type:'))
					.append($('<div>', {
						'class': 'text appealtype'
					}))
					.appendTo(hd);
				$('<div>', {
					'class': 'cf'
				}).appendTo(hd);

				var entity = $('<div>', {
					'class': 'text entitynum'
				});
				var value = parseInt(String(val.descriptionofproject).replace(/[^0-9\.]/g, ''), 10);

				if (val.descriptionofproject) {
					entity.text(val.descriptionofproject);
					//.append( $( '<a>', { 'class': 'moredetails-link', 'href': 'javascript:void(0);' }).data({ "ent": val.ent, "value": value }).text('[+]') );
				} else {
					entity.text("N/A");
				}

				$('<div>', {
						'class': 'calendarColumn'
					})
					.append($('<div>', {
						'class': 'label'
					}).text(val.entName + ' #:'))
					.append(entity)
					.appendTo(hd);
				$('<div>', {
					'class': 'calendarColumnFullRow'
				}).append($('<div>', {
					'class': 'entityDetailContainer'
				})).appendTo(hd);
				$('<div>', {
					'class': 'cf'
				}).appendTo(hd);

				$('<div>', {
						'class': 'calendarColumnFullRow'
					})
					.append($('<div>', {
						'class': 'label'
					}).text('Appeal Grounds:'))
					.append($('<div>', {
						'class': 'text'
					}).text(val.grounds))
					.appendTo(hd);
				$('<div>', {
						'class': 'calendarColumn'
					})
					.append($('<div>', {
						'class': 'label'
					}).text("Decision History"))
					.append($('<a>', {
						'class': 'decisionLink',
						'href': 'javascript:void(0);'
					}).data('appeal_key', val.appeal_id).text('[+]'))
					.appendTo(hd);
				$('<div>', {
					'class': 'cf'
				}).appendTo(hd);

				$('<div>', {
					'class': 'calendarColumnFullRow'
				}).append($('<div>', {
					'class': 'decisionDetailContainer'
				})).appendTo(hd);
				$('<div>', {
					'class': 'cf'
				}).appendTo(hd);

				$('<div>', {
						'class': 'calendarColumn'
					})
					.append($('<div>', {
						'class': 'label'
					}).text("Court History"))
					.append($('<a>', {
						'class': 'courtLink',
						'href': 'javascript:void(0);'
					}).data('appeal_key', val.appeal_id).text('[+]'))
					.appendTo(hd);
				$('<div>', {
					'class': 'cf'
				}).appendTo(hd);

				$('<div>', {
					'class': 'calendarColumnFullRow'
				}).append($('<div>', {
					'class': 'courtDetailContainer'
				})).appendTo(hd);
				$('<div>', {
					'class': 'cf'
				}).appendTo(hd);

				$('<div>', {
						'class': 'calendarColumnFullRow'
					})
					.append($('<div>', {
						'class': 'label'
					}).text('Primary Applicant:'))
					.append($('<div>', {
						'class': 'text'
					}).text(val.owner))
					.appendTo(hd);

				$('<div>', {
						'class': 'calendarColumnFullRow'
					})
					.append($('<div>', {
						'class': 'label'
					}).text('Capacity:'))
					.append($('<div>', {
						'class': 'text'
					}).text((val.capacity) ? val.capacity : " - "))
					.appendTo(hd);

				$('<div>', {
					'class': 'cf'
				}).appendTo(hd);
				$(".sessionViewer>.infoPanel").append(hd);
				$panel.append(lf);
			});

			$('.loading').hide();
			$(".courtLink").off('click').on('click', courtDetail);
			$('.decisionLink').off('click').on('click', decisionDetail);
			$('.moredetails-link').off('click').on('click', entityDetail);
		};

		function addressDetail() {
			$(".addressLink").removeClass("current");
			$(this).addClass("current");

			if ($(".infoPanel>div:visible").length > 0) {
				$(".infoPanel>div:visible").stop().slideUp();
				currentContext = $('#' + $(this).data('appeal_key')).stop().slideDown();
			} else {
				currentContext = $('#' + $(this).data('appeal_key')).stop().slideDown();
			}

			var query = serviceURL + encodeURIComponent("SELECT appealtype FROM LI_APPEALS_TYPE WHERE appealkey = '" + $(this).data(
				'appeal_key') + "'");
			serviceCall(query, function (data, callback) {
				if (data != null && !data.error && data.rows) {
					$('.appealtype', currentContext).empty();
					$.each(data.rows, function () {
						if (this.appealtype == '') {
							this.appealtype = 'Appeal Type not provided';
						}
						$('.appealtype', currentContext).append($("<span>", {
							"class": "appeal-type"
						}).text(this.appealtype));
					});
				}
			}, null);
			return false;
		};

		function decisionDetail() {
			var element = $(".decisionDetailContainer", currentContext);
			if (element.html() > "") {
				if (element.is(":visible")) {
					element.slideUp();
					$(".decisionLink", currentContext).text("[+]");
				} else {
					element.slideDown();
					$(".decisionLink", currentContext).text("[-]");
				}
				return;
			}

			$('.loading').show();
			$(".decisionLink", currentContext).text("[-]");

			var query = serviceURL + encodeURIComponent("SELECT * FROM LI_BOARD_DECISIONS WHERE appealkey = '" + $(this).data(
				'appeal_key') + "'");
			serviceCall(query, function (data) {
				element.empty();
				if (data != null && !data.error && data.rows) {
					if (data.rows.length) {
						var t = $('<table>', {
								'class': 'appealsCalendar'
							})
							.append($('<thead>')
								.append($('<tr>', {
										'class': 'decisionHistory labels'
									})
									.append($('<th>').text("Decision Date"))
									.append($('<th>').text("Decision"))
								)
							)
							.append($('<tbody>')).appendTo(element);

						$.each(data.rows, function (key, val) {
							var actionDate = new Date();
							actionDate = serverDate(val.decisiondate);


							$('<tr>', {
									'class': 'decisionHistory values'
								})
								.append($('<td>').text(((val.decisiondate != null) ? actionDate.toDateString() : ' - ')))
								.append($('<td>').text(((val.decision != null) ? val.decision : ' - ')))
								.appendTo(t);

							if (val.proviso && val.proviso != '') {
								$('<tr>')
									.append($('<td>', {
										'colspan': '2'
									}).text(val.proviso))
									.appendTo(t);
							}
						});
					} else {
						element.text("No records found.");
					}
				} else {
					element.text("No records found.");
				}
				element.slideDown();
				$('.loading').hide();
			}, null);

			return false;
		};

		function courtDetail() {
			var element = $(".courtDetailContainer", currentContext);
			if (element.html() > "") {
				if (element.is(":visible")) {
					element.slideUp();
					$(".courtLink", currentContext).text("[+]");
				} else {
					element.slideDown();
					$(".courtLink", currentContext).text("[-]");
				}
				return;
			}

			$('.loading').show();
			$(".courtLink", currentContext).text("[-]");

			var query = serviceURL + encodeURIComponent("SELECT * FROM LI_COURT_APPEALS WHERE appealkey = '" + $(this).data(
				"appeal_key") + "' ORDER BY courtactiondate DESC");
			serviceCall(query, function (data, callback) {
				element.empty();
				if (data != null && !data.error && data.rows) {
					if (data.rows.length) {
						var table = $("<table>", {
							"class": "appealsCalendar"
						});
						var thead = $("<thead>").appendTo(table);
						$("<tr>", {
								"class": "courtHistory labels"
							}).appendTo(thead)
							.append($("<th>").text("Date"))
							.append($("<th>").text("Court Type"))
							.append($("<th>").text("Case#"))
							.append($("<th>").text("Action"))
							.append($("<th>").text("Result"))

						var tbody = $("<tbody>").appendTo(table);

						$.each(data.rows, function (key, val) {
							var tr = $("<tr>", {
								"class": "courtHistory value"
							});

							$("<td>")
								.text((!val.courtactiondate) ? "" : serverDate(val.courtactiondate).toDateString())
								.appendTo(tr);

							$("<td>")
								.text((!val.court) ? "" : val.court)
								.appendTo(tr);

							$("<td>")
								.text((!val.courtcasenumber) ? "" : val.courtcasenumber)
								.appendTo(tr);

							$("<td>")
								.text((!val.courtaction) ? "" : val.courtaction)
								.appendTo(tr);

							$("<td>")
								.text((!val.courtresult) ? "" : val.courtresult)
								.appendTo(tr);

							tbody.append(tr);

							if (val.courtproviso) {
								var tr2 = $("<tr>", {
										"class": "proviso"
									})
									.append($("<td>", {
										"colspan": 5
									}).text(val.courtproviso));
								tbody.append(tr2);
							}
						});

						element.append(table);
					} else {
						element.text("No records found.");
					}
				} else {
					element.text("No records found.");
				}
				element.slideDown();
				$('.loading').hide();
			}, null);

			return false;
		};

		function hasValue(val) {
			if (val != null) return true;
			return false;
		}

		function appendElement(caption, value, element) {
			var div = $('<div>', {
					'class': 'calendarColumn'
				})
				.append($('<div>', {
					'class': 'label'
				}).text((caption != null) ? caption : ' - '))
				.append($('<div>', {
					'class': 'text'
				}).text((value != null) ? value : ' - '));

			element.append(div);
		}


		function isNumber(n) {
			return !isNaN(parseFloat(n)) && isFinite(n);
		}

		function entityDetail() {
			var element = $(".entityDetailContainer", currentContext);
			if (element.html() > "") {
				if (element.is(":visible")) {
					element.slideUp();
					$(".moredetails-link", currentContext).text("[+]");
				} else {
					element.slideDown();
					$(".moredetails-link", currentContext).text("[-]");
				}
				return;
			}

			$('.loading').show();
			$(".moredetails-link", currentContext).text("[-]");

			element.empty();

			var type = $(this).data('ent');
			query = 'SELECT * FROM LI_PERMITS JOIN LI_APPEALS ON permitnumber = \'' + $(this).data('value') +
				'\' AND (applictype = \'RB_ZBA\' OR applictype = \'RB_BBS\' ) ORDER BY permitissuedate DESC LIMIT 1 OFFSET 0'
			if ("cases" == type) {
				var query = 'SELECT * FROM LI_VIOLATIONS JOIN LI_APPEALS ON casenumber = \'' + $(this).data('value') +
					'\'  AND applictype = \'RB_LIRB\' ORDER BY mostrecentinsp DESC, caseresolutiondate DESC LIMIT 1 OFFSET 0';
			}

			serviceCall(serviceURL + encodeURIComponent(query), function (data, callback) {
				if (data != null && !data.error && data.rows) {
					if (data.rows.length) {
						var val = data.rows[0];
						if ("cases" == type) {
							appendElement("Case Group", val.casegroup, element);
							appendElement("Date Added", (val.caseaddeddate) ? serverDate(val.caseaddeddate).toDateString() : val.caseaddeddate,
								element)
							appendElement("Last Updated", (val.mostrecentinsp) ? serverDate(val.mostrecentinsp).toDateString() : val.mostrecentinsp,
								element)
							appendElement("Status", val.casestatus, element);
							appendElement("Resolution", val.caseresolutioncode, element);
							appendElement("Date of Resolution", (val.caseresolutiondate) ? serverDate(val.caseresolutiondate).toDateString() :
								val.caseresolutiondate, element);
							appendElement("Priority", (val.prioritydesc + " (" + val.casepriority + ")"), element);

						} else if ("permits" == type) {
							appendElement("Application Type", val.permitdescription, element);
							appendElement("Permit Type", val.permit_type_name, element);
							appendElement("Status", val.status, element);
							appendElement("Date Issued", (val.permitissuedate) ? serverDate(val.permitissuedate).toDateString() : val.permitissuedate,
								element);

							// appendElement("Last Updated", (val.updated_datetime == undefined) ? 'N/A' : new Date(parseJsonDate(val.updated_datetime))
							// 	.toDateString(), element); // IT LOOKS LIKE THIS INFORMATION IS REMOVED

							// appendElement("Expiration Date", (val.expires_datetime == undefined) ? 'N/A' : new Date(parseJsonDate(val.expires_datetime)).toDateString(), element); // IT LOOKS LIKE THIS INFORMATION IS REMOVED

							// var mConcactInfo = "";
							// if (hasValue(val.pri_contact_company_name)) {
							// 	mConcactInfo = val.pri_contact_company_name + "<br/>";
							// }
							// if (hasValue(val.pri_contact_first_name)) {
							// 	mConcactInfo = mConcactInfo + val.pri_contact_first_name + "&nbsp;";
							// }
							// if (hasValue(val.pri_contact_last_name)) {
							// 	mConcactInfo = mConcactInfo + val.pri_contact_last_name + "<br/>";
							// }
							// if (hasValue(val.pri_contact_address1)) {
							// 	mConcactInfo = mConcactInfo + val.pri_contact_address1 + "<br/>";
							// }
							// if (hasValue(val.pri_contact_address2)) {
							// 	mConcactInfo = mConcactInfo + val.pri_contact_address2 + "<br/>";
							// }
							// if (hasValue(val.pri_contact_city)) {
							// 	mConcactInfo = mConcactInfo + val.pri_contact_city + ", &nbsp;";
							// }
							// if (hasValue(val.pri_contact_state)) {
							// 	mConcactInfo = mConcactInfo + val.pri_contact_state + "&nbsp;";
							// }
							// if (hasValue(val.pri_contact_zip)) {
							// 	mConcactInfo = mConcactInfo + val.pri_contact_zip + "&nbsp;";
							// }
							// appendElement("Contact Information", mConcactInfo, element);
							// appendElement("Contact Type", val.contact_type, element);

							// CONTACT INFORMATION WAS REMOVED

						}
					} else {
						element.text("No records found.");
					}
				} else {
					element.text("No records found.");
				}

				element.slideDown();
				$('.loading').hide();
			}, null);
			return false;
		};

		$(function () {
			var spinner = new Spinner({
				lines: 10, // The number of lines to draw
				length: 10, // The length of each line
				width: 7, // The line thickness
				radius: 21, // The radius of the inner circle
				color: '#000', // #rgb or #rrggbb
				speed: 1, // Rounds per second
				trail: 89, // Afterglow percentage
				shadow: true, // Whether to render a shadow
				hwaccel: true // Whether to use hardware acceleration
			}).spin($('.loading')[0]);

			$('#calendar').fullCalendar({
				// defaultDate : $.fullCalendar.moment('2010-06-15'),
				header: {
					left: 'prev,next today',
					center: 'title',
					right: 'month,basicWeek,basicDay',
					defaultView: 'month'
				},
				displayEventTime: false,
				eventSources: [
					// your event source
					{
						events: function (start, end, timezone, callback) {

							$(".sessionViewer .address-content").empty();
							$(".sessionViewer>.infoHeader>.date").empty();
							$(".sessionViewer>.infoHeader>h2").empty();
							$(".sessionViewer>.infoPanel").empty();

							var apiurl = serviceURL + encodeURIComponent(
								"SELECT DATE(date_scheduled) AS scheduled_datetime, applictype AS board_type FROM LI_APPEALS WHERE DATE(date_scheduled) >= '" +
								start.toISOString() +
								"' AND DATE(date_scheduled) < '" + end.toISOString() +
								"' GROUP BY scheduled_datetime, board_type ORDER BY scheduled_datetime ASC");
							serviceCall(apiurl, getEvents, callback);
						},
						color: '#cecece',
						borderColor: '#cecece',
						backgroundColor: "#cecece"
					}
				],
				editable: false,
				theme: true,
				viewDisplay: function (view) {},
				eventClick: function (calEvent, jsEvent, view) {
					var apis3 = null;
					if ("RB_ZBA" == calEvent.btype) {
						apis3 = "Zoning Board of Appeal";
					} else if ("RB_LIRB" == calEvent.btype) {
						apis3 = "L&I Review Board of Appeal";
					} else if ("RB_BBS" == calEvent.btype) {
						apis3 = "Board of Building Standards";
					}

					$(".sessionViewer>.infoHeader>h2").text(apis3 + " Public Hearings");
					$(".sessionViewer>.infoHeader>.date").text((calEvent.hearing_start == undefined) ? 'N/A' : new Date(calEvent
						.hearing_start).toDateString());
					$(".sessionViewer .address-content").html("");
					$(".sessionViewer>.infoPanel").html("");
					var apiurl = serviceURL + encodeURIComponent("SELECT * FROM LI_APPEALS WHERE DATE(date_scheduled) >= '" +
						toISOString(calEvent.hearing_start) +
						"' AND DATE(date_scheduled) < '" + toISOString(calEvent.hearing_end) + "' ORDER BY date_scheduled ASC");

					$('.loading').show();
					serviceCall(apiurl, getHearings, populateHearings);
					return false;
				},
				eventMouseover: function (event, jsEvent, view) {
					$(this).css('background', 'blue');
				},
				eventMouseout: function (event, jsEvent, view) {
					$(this).css('background', 'white');
				},
				loading: function (bool) {
					if (bool) $('.loading').show();
					else $('.loading').hide();
				}
			});
		});
	</script>
</div>
<div class="ph-widget sessionViewer">
	<div class="infoHeader">
		<h2>
		</h2>
		<div class="date">
		</div>
	</div>
	<div class="address mCustomScrollbar" data-mcs-axis="y">
		<div class="address-content"></div>
	</div>
	<div class="infoPanel">
	</div>
</div>